#!/bin/bash -e

eval "$(cli-shezargs $@)"

ra_invoke() {
  ra invoke "$@"
  echo -n ', '
}

scripts_project_dir="${scripts_dir}/../.."
sara_scripts_dir="${scripts_project_dir}/../serverassist/ra-scripts"


# Each of the commands produces a JSON object, so turn this script's output into an array
echo '['

if [[ -n $workstation ]]; then
  subdomain1="local."

else
  subdomain1=""

fi

if [[ -n $server_assist ]]; then

  mobilewebassist_style="1"
  domain_name="mobilewebassist.net"
  test_domain_name="mobiledevassist.net"
  project_id="sa"
  top_ns="hp"
  deploy_style="greenBlueByService"
  deploy_args="sa,sa_dbgtelemetry"

  onramp_version="1"

elif [[ -n $secure_print ]]; then

  mobilewebassist_style="1"
  domain_name="mobilewebprint.net"
  test_domain_name="mobiledevprint.net"
  project_id="sap"
  top_ns="hp"
  deploy_args="sap,gen2_app"

  apigee_onramp="1"
  pub_onramp_subdomain="secureprint."
  test_onramp_subdomain="test.secureprint."
  onramp_version="12"

elif [[ -n $mario ]]; then

  mobilewebassist_style="1"
  domain_name="mobilewebprint.net"
  test_domain_name="mobiledevprint.net"
  project_id="mwp"
  top_ns="hp"
  deploy_args="mwp,gen2_app"

  onramp_version="12"

fi

# ------------------------------------------------------------------------------------------------------------
# Enter DB items

if [[ -n $mobilewebassist_style ]]; then
  [[ -d $sara_scripts_dir ]] || die "Cannot find serverassist ra-scripts dir ${sara_scripts_dir}"

  [[ -n $workstation ]] && ws="--workstation"

  cd $sara_scripts_dir

  # ---------- The project ----------
  "${scripts_dir}/seed-db-upsert-project" --project-id="${project_id}" --top-ns="${top_ns}" "${ws}" \
          --domain-name="${domain_name}" \
          --test-domain-name="${test_domain_name}" \
          --deploy-style="${deploy_style}" \
          --deploy-args="${deploy_args}" \
          --workstation-deploy-style=justX \
          --workstation-deploy-args="${project_id},prod" \
          --aws-dev-key=mario_demo --aws-prod-key=mario_prod --aws-hq-key=HQ \
          --bucket-namespace=mobilewebprint \
          --cluster-class-b=13 --test-class-b=15 --prod-class-b=12 \
          --uri-base="${subdomain1}${domain_name}/${project_id}/" \
          --uri-test-base="${subdomain1}${test_domain_name}/${project_id}/"

  # ---------- Insert the stacks ----------

  if [[ -z $workstation ]]; then

    # The main prod stack
    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=pub  --color=green  --state=main --fqdn="green-pub.${subdomain1}${domain_name}"

    # Other stacks for colored deploys
    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=pub  --color=blue   --state=gone --fqdn="blue-pub.${subdomain1}${domain_name}"
    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=pub  --color=teal   --state=gone --fqdn="teal-pub.${subdomain1}${domain_name}"
    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=pub  --color=yellow --state=gone --fqdn="yellow-pub.${subdomain1}${domain_name}"

    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=test --color=green  --state=gone --fqdn="green-test.${subdomain1}${test_domain_name}"
    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=test --color=blue   --state=gone --fqdn="blue-test.${subdomain1}${test_domain_name}"
    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=test --color=teal   --state=gone --fqdn="teal-test.${subdomain1}${test_domain_name}"
    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=test --color=yellow --state=gone --fqdn="yellow-test.${subdomain1}${test_domain_name}"

  else

    # The only stack
    #ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=pub  --color=green --state=main             --fqdn="${subdomain1}${domain_name}"

    ra_invoke ./models/stack.js  upsertStack --project-id="${project_id}" --stack=pub  --color=green --state=main  --fqdn="green-pub.${subdomain1}${domain_name}"

  fi
fi

if [[ $apigee_onramp ]]; then
  if [[ -z $workstation ]]; then
    # The main prod stack
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}"   --internal="green-pub.${subdomain1}${domain_name}" --external="${pub_onramp_subdomain}api.hp.com/${project_id}/green/api/v${onramp_version}"

    # Other stacks for colored deploys
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}"    --internal="blue-pub.${subdomain1}${domain_name}"  --external="${pub_onramp_subdomain}api.hp.com/${project_id}/blue/api/v${onramp_version}"
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}"    --internal="teal-pub.${subdomain1}${domain_name}"  --external="${pub_onramp_subdomain}api.hp.com/${project_id}/teal/api/v${onramp_version}"
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}"  --internal="yellow-pub.${subdomain1}${domain_name}"  --external="${pub_onramp_subdomain}api.hp.com/${project_id}/yellow/api/v${onramp_version}"

    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}"  --internal="green-test.${subdomain1}${domain_name}" --external="${test_onramp_subdomain}api.hp.com/${project_id}/green/api/v${onramp_version}"
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}"   --internal="blue-test.${subdomain1}${domain_name}" --external="${test_onramp_subdomain}api.hp.com/${project_id}/blue/api/v${onramp_version}"
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}"   --internal="teal-test.${subdomain1}${domain_name}" --external="${test_onramp_subdomain}api.hp.com/${project_id}/teal/api/v${onramp_version}"
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}" --internal="yellow-test.${subdomain1}${domain_name}" --external="${test_onramp_subdomain}api.hp.com/${project_id}/yellow/api/v${onramp_version}"

  else
    # The only stack
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}" --internal="green-pub.${subdomain1}${domain_name}" --external="${subdomain1}${domain_name}"

  fi

else
  if [[ -z $workstation ]]; then
    echo -n
  else
    # The only stack
    ra_invoke ./models/onramp.js upsertOnramp --project-id="${project_id}" --version="${onramp_version}" --internal="green-pub.${subdomain1}${domain_name}" --external="${subdomain1}${domain_name}"

  fi


fi


# ------------------------------------------------------------------------------------------------------------
echo '""'
echo ']'

cd $start_dir

