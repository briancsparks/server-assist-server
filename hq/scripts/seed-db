#!/bin/bash -e

eval "$(cli-shezargs $@)"

ra_invoke() {
  ra invoke "$@"
  echo -n ', '
}

scripts_dir="${start_dir}/${script_dir}"
scripts_project_dir="${scripts_dir}/../.."
sara_scripts_dir="${scripts_project_dir}/../serverassist/ra-scripts"

#echo "$scripts_dir"
#echo "$sara_scripts_dir"

# Each of the commands produces a JSON object, so turn this script's output into an array

echo '['

if [[ -n $workstation ]]; then
  [[ -d $sara_scripts_dir ]] || die "Cannot find serverassist ra-scripts dir ${sara_scripts_dir}"

#  cd $sara_scripts_dir
#
#  ra invoke ./models/project.js upsertProject --project-id=sa --uri-base=local.mobilewebassist.net/sa/
#  echo -n ', '
#
#  ra invoke ./models/project.js upsertProject --project-id=hq --uri-base=hq.local.mobilewebassist.net/
#  echo -n ', '
#
#  ra invoke ./models/onramp.js  upsertOnramp --internal-name=test-green.mobilewebprint.net --version=12 --external-name=test.secureprint.api.hp.com/sap/api/v12/
#  echo -n ', '
#
#  ra invoke ./models/onramp.js  upsertOnramp --internal-name=local.mobilewebassist.net --version=1 --external-name=local.mobilewebassist.net/sa/api/v1/
#  echo -n ', '
#
#  ra invoke ./models/stack.js  upsertStack --stack=pub --color=green --state=main --fqdn=local.mobilewebassist.net
#  echo -n ', '

  subdomain1="local."
else
  subdomain1=""
fi

if [[ -n $server_assist ]]; then

  [[ -d $sara_scripts_dir ]] || die "Cannot find serverassist ra-scripts dir ${sara_scripts_dir}"

  cd $sara_scripts_dir

  # ---------- The serverassist (SA) project ----------
  ra_invoke ./models/project.js upsertProject --project-id=sa --top-ns=hp \
          --deploy-style=justX \
          --uri-base="${subdomain1}mobilewebassist.net/sa/" --uri-test-base="${subdomain1}mobiledevassist.net/sa/"

  # ---------- Insert the stacks ----------

  # The main prod stack
  ra_invoke ./models/stack.js  upsertStack --project-id=sa --stack=pub  --color=green --state=main --fqdn="green-pub.${subdomain1}mobilewebassist.net"

  # Other stacks for colored deploys
  if [[ -z $workstation ]]; then
    ra_invoke ./models/stack.js  upsertStack --project-id=sa --stack=pub  --color=blue  --state=gone --fqdn=blue-pub.mobilewebassist.net
    ra_invoke ./models/stack.js  upsertStack --project-id=sa --stack=pub  --color=teal  --state=gone --fqdn=teal-pub.mobilewebassist.net
    ra_invoke ./models/stack.js  upsertStack --project-id=sa --stack=pub  --color=yelow --state=gone --fqdn=yelow-pub.mobilewebassist.net

    ra_invoke ./models/stack.js  upsertStack --project-id=sa --stack=test --color=green --state=gone --fqdn=green-test.mobilewebassist.net
    ra_invoke ./models/stack.js  upsertStack --project-id=sa --stack=test --color=blue  --state=gone --fqdn=blue-test.mobilewebassist.net
    ra_invoke ./models/stack.js  upsertStack --project-id=sa --stack=test --color=teal  --state=gone --fqdn=teal-test.mobilewebassist.net
    ra_invoke ./models/stack.js  upsertStack --project-id=sa --stack=test --color=yelow --state=gone --fqdn=yelow-test.mobilewebassist.net

  fi

  #ra invoke ./models/onramp.js  upsertOnramp --internal-name=test-green."${subdomain1}`mobilewebassist.net --version=1 --external-name=test.secureprint.api.hp.com/sap/api/v1/
  #echo -n ', '


elif [[ -n $mario ]]; then

  [[ -d $sara_scripts_dir ]] || die "Cannot find serverassist ra-scripts dir ${sara_scripts_dir}"

  cd $sara_scripts_dir

  ra invoke ./models/project.js upsertProject --top-ns=hp --project-id=mwp --uri-base=mobilewebprint.net/mwp/  --uri-test-base=mobiledevprint.net/mwp/
  echo -n ', '

  ra invoke ./models/project.js upsertProject --top-ns=hp --project-id=sap --uri-base=mobilewebprint.net/sap/  --uri-test-base=mobiledevprint.net/sap/
  echo -n ', '

  ra invoke ./models/partner.js upsertPartner --top-ns=hp --project-id=sap --partner-id=VALASSIS
  echo -n ', '

elif [[ -n $xcc ]]; then

  # ---------- xcc
  cd $sara_scripts_dir

  ra invoke ./models/project.js upsertProject --top-ns=hp --project-id=xcc --uri-base=local.mobilewebassist.net/xcc/ --uri-test-base=local.mobilewebassist.net/xcc/
  echo -n ', '

  ra invoke ./models/app.js upsertApp --project-id=xcc --vetted=true --type=www --name=inspect --app-id=xcc_inspect --mount=xcc/www/inspect/ --rewrite=false
  echo -n ', '

fi

echo '""'
echo ']'

cd $start_dir

